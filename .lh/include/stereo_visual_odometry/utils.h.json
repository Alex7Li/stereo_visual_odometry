{
    "sourceFile": "include/stereo_visual_odometry/utils.h",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1645282497043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1645282497043,
            "name": "Commit-0",
            "content": "#ifndef UTILS_H\n#define UTILS_H\n\n#include \"opencv2/video/tracking.hpp\"\n#include \"opencv2/imgproc/imgproc.hpp\"\n#include \"opencv2/highgui/highgui.hpp\"\n#include \"opencv2/features2d/features2d.hpp\"\n#include \"opencv2/calib3d/calib3d.hpp\"\n\n#include <iostream>\n#include <ctype.h>\n#include <algorithm>\n#include <iterator>\n#include <vector>\n#include <ctime>\n#include <sstream>\n#include <fstream>\n#include <string>\n\n\n#include \"feature.h\"\n\n// --------------------------------\n// Visualization\n// --------------------------------\nvoid drawFeaturePoints(cv::Mat image, std::vector<cv::Point2f>& points);\n\nvoid display(int frame_id, cv::Mat& trajectory, cv::Mat& pose, std::vector<Matrix>& pose_matrix_gt, float fps, bool showgt);\n\n// --------------------------------\n// Transformation\n// --------------------------------\nvoid integrateOdometryStereo(int frame_id, cv::Mat& frame_pose, const cv::Mat& rotation, \n                            const cv::Mat& translation_stereo);\n\nbool isRotationMatrix(cv::Mat &R);\n\ncv::Vec3f rotationMatrixToEulerAngles(cv::Mat &R);\n\n// --------------------------------\n// I/O\n// --------------------------------\n\nvoid loadImageLeft(cv::Mat& image_color, cv::Mat& image_gary, int frame_id, std::string filepath);\n\nvoid loadImageRight(cv::Mat& image_color, cv::Mat& image_gary, int frame_id, std::string filepath);\n\n#endif\n"
        }
    ]
}