{
    "sourceFile": "src/bucket.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1645282669107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1645283212281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n \n void Bucket::add_feature(cv::Point2f point, int age){\n     // won't add feature with age > 10;\n-    int age_threshold = 10;\n+    int AGE_THRESHOLD = 10;\n     if (age < age_threshold)\n     {\n         // insert any feature before bucket is full\n         if (size()<max_size)\n"
                },
                {
                    "date": 1645283221742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n \n \n void Bucket::add_feature(cv::Point2f point, int age){\n     // won't add feature with age > 10;\n-    int AGE_THRESHOLD = 10;\n     if (age < age_threshold)\n     {\n         // insert any feature before bucket is full\n         if (size()<max_size)\n"
                },
                {
                    "date": 1645283255898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n \n void Bucket::add_feature(cv::Point2f point, int age){\n     // won't add feature with age > 10;\n-    if (age < age_threshold)\n+    if (age < Bucket::AGE_THRESHOLD)\n     {\n         // insert any feature before bucket is full\n         if (size()<max_size)\n         {\n"
                },
                {
                    "date": 1645283280619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-#include \"stereo_visual_odometry/vo.h\"\n+#include \"vo.h\"\n \n Bucket::Bucket(int size){\n     max_size = size;\n }\n"
                },
                {
                    "date": 1645283311718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-#include \"vo.h\"\n+#include \"stereo_visual_odometry/vo.h\"\n \n Bucket::Bucket(int size){\n     max_size = size;\n }\n@@ -9,12 +9,12 @@\n }\n \n \n void Bucket::add_feature(cv::Point2f point, int age){\n-    // won't add feature with age > 10;\n+    // Don't add sufficently old Features\n     if (age < Bucket::AGE_THRESHOLD)\n     {\n-        // insert any feature before bucket is full\n+        // Insert any feature before bucket is full.\n         if (size()<max_size)\n         {\n             features.points.push_back(point);\n             features.ages.push_back(age);\n"
                },
                {
                    "date": 1645283414533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,10 @@\n             features.points.push_back(point);\n             features.ages.push_back(age);\n         }\n         else\n-        // insert feature with old age and remove youngest one\n+        // TODO: Isn't this backwards? ~ Alex\n+        // Insert feature with old age and remove youngest one.\n         {\n             int age_min = features.ages[0];\n             int age_min_idx = 0;\n \n"
                },
                {
                    "date": 1645283472379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,10 @@\n             features.points.push_back(point);\n             features.ages.push_back(age);\n         }\n         else\n-        // TODO: Isn't this backwards? ~ Alex\n+        // TODO: Isn't this backwards? Don't we want to remove the\n+        // oldest feature? ~ Alex\n         // Insert feature with old age and remove youngest one.\n         {\n             int age_min = features.ages[0];\n             int age_min_idx = 0;\n"
                },
                {
                    "date": 1645283493111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,21 +10,17 @@\n \n \n void Bucket::add_feature(cv::Point2f point, int age){\n     // Don't add sufficently old Features\n-    if (age < Bucket::AGE_THRESHOLD)\n-    {\n+    if (age < Bucket::AGE_THRESHOLD) {\n         // Insert any feature before bucket is full.\n-        if (size()<max_size)\n-        {\n+        if (size()<max_size) {\n             features.points.push_back(point);\n             features.ages.push_back(age);\n-        }\n-        else\n+        } else {\n         // TODO: Isn't this backwards? Don't we want to remove the\n         // oldest feature? ~ Alex\n         // Insert feature with old age and remove youngest one.\n-        {\n             int age_min = features.ages[0];\n             int age_min_idx = 0;\n \n             for (int i = 0; i < size(); i++)\n"
                },
                {
                    "date": 1645283525822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,48 +1,41 @@\n #include \"stereo_visual_odometry/vo.h\"\n \n-Bucket::Bucket(int size){\n-    max_size = size;\n-}\n+Bucket::Bucket(int size) { max_size = size; }\n \n-int Bucket::size(){\n-    return features.points.size();\n-}\n+int Bucket::size() { return features.points.size(); }\n \n+void Bucket::add_feature(cv::Point2f point, int age) {\n+  // Don't add sufficently old Features\n+  if (age < Bucket::AGE_THRESHOLD) {\n+    // Insert any feature before bucket is full.\n+    if (size() < max_size) {\n+      features.points.push_back(point);\n+      features.ages.push_back(age);\n+    } else {\n+      // TODO: Isn't this backwards? Don't we want to remove the\n+      // oldest feature? ~ Alex\n+      // Insert feature with old age and remove youngest one.\n+      int age_min = features.ages[0];\n+      int age_min_idx = 0;\n \n-void Bucket::add_feature(cv::Point2f point, int age){\n-    // Don't add sufficently old Features\n-    if (age < Bucket::AGE_THRESHOLD) {\n-        // Insert any feature before bucket is full.\n-        if (size()<max_size) {\n-            features.points.push_back(point);\n-            features.ages.push_back(age);\n-        } else {\n-        // TODO: Isn't this backwards? Don't we want to remove the\n-        // oldest feature? ~ Alex\n-        // Insert feature with old age and remove youngest one.\n-            int age_min = features.ages[0];\n-            int age_min_idx = 0;\n-\n-            for (int i = 0; i < size(); i++)\n-            {\n-                if (age < age_min)\n-                {\n-                    age_min = age;\n-                    age_min_idx = i;\n-                }\n-            }\n\\ No newline at end of file\n-            features.points[age_min_idx] = point;\n-            features.ages[age_min_idx] = age;\n+      for (int i = 0; i < size(); i++) {\n+        if (age < age_min) {\n+          age_min = age;\n+          age_min_idx = i;\n         }\n-    } \n-\n+      }\n+      features.points[age_min_idx] = point;\n+      features.ages[age_min_idx] = age;\n+    }\n+  }\n }\n \n-void Bucket::get_features(FeatureSet& current_features){\n-\n-    current_features.points.insert(current_features.points.end(), features.points.begin(), features.points.end());\n-    current_features.ages.insert(current_features.ages.end(), features.ages.begin(), features.ages.end());\n+void Bucket::get_features(FeatureSet &current_features) {\n+  current_features.points.insert(current_features.points.end(),\n+                                 features.points.begin(),\n+                                 features.points.end());\n+  current_features.ages.insert(current_features.ages.end(),\n+                               features.ages.begin(), features.ages.end());\n }\n \n-Bucket::~Bucket(){\n-}\n+Bucket::~Bucket() {}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1645282669107,
            "name": "Commit-0",
            "content": "#include \"stereo_visual_odometry/vo.h\"\n\nBucket::Bucket(int size){\n    max_size = size;\n}\n\nint Bucket::size(){\n    return features.points.size();\n}\n\n\nvoid Bucket::add_feature(cv::Point2f point, int age){\n    // won't add feature with age > 10;\n    int age_threshold = 10;\n    if (age < age_threshold)\n    {\n        // insert any feature before bucket is full\n        if (size()<max_size)\n        {\n            features.points.push_back(point);\n            features.ages.push_back(age);\n        }\n        else\n        // insert feature with old age and remove youngest one\n        {\n            int age_min = features.ages[0];\n            int age_min_idx = 0;\n\n            for (int i = 0; i < size(); i++)\n            {\n                if (age < age_min)\n                {\n                    age_min = age;\n                    age_min_idx = i;\n                }\n            }\n            features.points[age_min_idx] = point;\n            features.ages[age_min_idx] = age;\n        }\n    } \n\n}\n\nvoid Bucket::get_features(FeatureSet& current_features){\n\n    current_features.points.insert(current_features.points.end(), features.points.begin(), features.points.end());\n    current_features.ages.insert(current_features.ages.end(), features.ages.begin(), features.ages.end());\n}\n\nBucket::~Bucket(){\n}"
        }
    ]
}