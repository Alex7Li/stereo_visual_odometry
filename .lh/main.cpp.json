{
    "sourceFile": "main.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1647468428295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1647468428295,
            "name": "Commit-0",
            "content": "#include <opencv2/core.hpp>\n#include <opencv2/imgcodecs.hpp>\n#include <opencv2/highgui.hpp>\n#include <opencv2/calib3d/calib3d.hpp>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include \"vo.h\"\n\nnamespace visual_odometry {\n\nint main(int argc, char** argv) {\n\n    if(argc < 5) {\n      std::cout << \"Too few arguments\" << std::endl;\n      return -1;\n    }\n    \n    // Disparity image data stucture\n    cv::Mat_<int16_t> disparity16;\n\n    // Image paths\n    std::string prev_img_l_path = argv[1];\n    std::string prev_img_r_path = argv[2];\n    std::string cur_img_l_path = argv[1];\n    std::string cur_img_r_path = argv[2];\n    std::string folderName = \"run1images\";\n    cv::Mat projMatrl = (cv::Mat_<float>(3, 4) << fx, 0., cx, 0., 0., fy, cy, 0., 0,  0., 1., 0.);\n    cv::Mat projMatrr = (cv::Mat_<float>(3, 4) << fx, 0., cx, bf, 0., fy, cy, 0., 0,  0., 1., 0.);\n\n    VisualOdometry vo(projMatrl, projMatrr);\n    for(int i = 0; i < 128; i++) {\n        std::stringstream lFileName;\n        std::stringstream rFileName;\n        lFileName << folderName << \"/left/\" << std::setw(4) << i << \".jpg\";\n        rFileName << folderName << \"/right/\" << std::setw(4) << i << \".jpg\";\n        const cv::Mat cur_img_l =  cv::imread(lFileName.str(), cv::IMREAD_GRAYSCALE);\n        const cv::Mat cur_img_r =  cv::imread(rFileName.str(), cv::IMREAD_GRAYSCALE);\n        vo.stereo_callback(cur_img_l, cur_img_r)\n\n\n    }\n    \n    //cv::imwrite(\"./disparity.png\",  (cv::Mat) disp_image);\n\n}\n\n} // namespace visual_odometry"
        }
    ]
}